// Generated by view binder compiler. Do not edit!
package com.example.finalteamproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.finalteamproject.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout containerLinearChangeAlarm;

  @NonNull
  public final LinearLayout containerLinearChangeFont;

  @NonNull
  public final LinearLayout containerLinearChangeProfile;

  @NonNull
  public final LinearLayout containerLinearChangePw;

  @NonNull
  public final LinearLayout containerLinearDeleteAccount;

  @NonNull
  public final LinearLayout containerLinearLogout;

  @NonNull
  public final ImageView imgvChangeAlarm;

  @NonNull
  public final ImageView imgvChangeFont;

  @NonNull
  public final ImageView imgvChangePw;

  @NonNull
  public final ImageView imgvDeleteAccount;

  @NonNull
  public final ImageView imgvLogout;

  @NonNull
  public final CircleImageView imgvProfileImg;

  @NonNull
  public final TextView tvAlarm;

  @NonNull
  public final TextView tvDeleteAccount;

  @NonNull
  public final TextView tvFont;

  @NonNull
  public final TextView tvLogout;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvNickname;

  @NonNull
  public final TextView tvPw;

  private FragmentSettingBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout containerLinearChangeAlarm,
      @NonNull LinearLayout containerLinearChangeFont,
      @NonNull LinearLayout containerLinearChangeProfile,
      @NonNull LinearLayout containerLinearChangePw,
      @NonNull LinearLayout containerLinearDeleteAccount,
      @NonNull LinearLayout containerLinearLogout, @NonNull ImageView imgvChangeAlarm,
      @NonNull ImageView imgvChangeFont, @NonNull ImageView imgvChangePw,
      @NonNull ImageView imgvDeleteAccount, @NonNull ImageView imgvLogout,
      @NonNull CircleImageView imgvProfileImg, @NonNull TextView tvAlarm,
      @NonNull TextView tvDeleteAccount, @NonNull TextView tvFont, @NonNull TextView tvLogout,
      @NonNull TextView tvName, @NonNull TextView tvNickname, @NonNull TextView tvPw) {
    this.rootView = rootView;
    this.containerLinearChangeAlarm = containerLinearChangeAlarm;
    this.containerLinearChangeFont = containerLinearChangeFont;
    this.containerLinearChangeProfile = containerLinearChangeProfile;
    this.containerLinearChangePw = containerLinearChangePw;
    this.containerLinearDeleteAccount = containerLinearDeleteAccount;
    this.containerLinearLogout = containerLinearLogout;
    this.imgvChangeAlarm = imgvChangeAlarm;
    this.imgvChangeFont = imgvChangeFont;
    this.imgvChangePw = imgvChangePw;
    this.imgvDeleteAccount = imgvDeleteAccount;
    this.imgvLogout = imgvLogout;
    this.imgvProfileImg = imgvProfileImg;
    this.tvAlarm = tvAlarm;
    this.tvDeleteAccount = tvDeleteAccount;
    this.tvFont = tvFont;
    this.tvLogout = tvLogout;
    this.tvName = tvName;
    this.tvNickname = tvNickname;
    this.tvPw = tvPw;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container_linear_change_alarm;
      LinearLayout containerLinearChangeAlarm = ViewBindings.findChildViewById(rootView, id);
      if (containerLinearChangeAlarm == null) {
        break missingId;
      }

      id = R.id.container_linear_change_font;
      LinearLayout containerLinearChangeFont = ViewBindings.findChildViewById(rootView, id);
      if (containerLinearChangeFont == null) {
        break missingId;
      }

      id = R.id.container_linear_change_profile;
      LinearLayout containerLinearChangeProfile = ViewBindings.findChildViewById(rootView, id);
      if (containerLinearChangeProfile == null) {
        break missingId;
      }

      id = R.id.container_linear_change_pw;
      LinearLayout containerLinearChangePw = ViewBindings.findChildViewById(rootView, id);
      if (containerLinearChangePw == null) {
        break missingId;
      }

      id = R.id.container_linear_delete_account;
      LinearLayout containerLinearDeleteAccount = ViewBindings.findChildViewById(rootView, id);
      if (containerLinearDeleteAccount == null) {
        break missingId;
      }

      id = R.id.container_linear_logout;
      LinearLayout containerLinearLogout = ViewBindings.findChildViewById(rootView, id);
      if (containerLinearLogout == null) {
        break missingId;
      }

      id = R.id.imgv_change_alarm;
      ImageView imgvChangeAlarm = ViewBindings.findChildViewById(rootView, id);
      if (imgvChangeAlarm == null) {
        break missingId;
      }

      id = R.id.imgv_change_font;
      ImageView imgvChangeFont = ViewBindings.findChildViewById(rootView, id);
      if (imgvChangeFont == null) {
        break missingId;
      }

      id = R.id.imgv_change_pw;
      ImageView imgvChangePw = ViewBindings.findChildViewById(rootView, id);
      if (imgvChangePw == null) {
        break missingId;
      }

      id = R.id.imgv_delete_account;
      ImageView imgvDeleteAccount = ViewBindings.findChildViewById(rootView, id);
      if (imgvDeleteAccount == null) {
        break missingId;
      }

      id = R.id.imgv_logout;
      ImageView imgvLogout = ViewBindings.findChildViewById(rootView, id);
      if (imgvLogout == null) {
        break missingId;
      }

      id = R.id.imgv_profile_img;
      CircleImageView imgvProfileImg = ViewBindings.findChildViewById(rootView, id);
      if (imgvProfileImg == null) {
        break missingId;
      }

      id = R.id.tv_alarm;
      TextView tvAlarm = ViewBindings.findChildViewById(rootView, id);
      if (tvAlarm == null) {
        break missingId;
      }

      id = R.id.tv_delete_account;
      TextView tvDeleteAccount = ViewBindings.findChildViewById(rootView, id);
      if (tvDeleteAccount == null) {
        break missingId;
      }

      id = R.id.tv_font;
      TextView tvFont = ViewBindings.findChildViewById(rootView, id);
      if (tvFont == null) {
        break missingId;
      }

      id = R.id.tv_logout;
      TextView tvLogout = ViewBindings.findChildViewById(rootView, id);
      if (tvLogout == null) {
        break missingId;
      }

      id = R.id.tv_name;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tv_nickname;
      TextView tvNickname = ViewBindings.findChildViewById(rootView, id);
      if (tvNickname == null) {
        break missingId;
      }

      id = R.id.tv_pw;
      TextView tvPw = ViewBindings.findChildViewById(rootView, id);
      if (tvPw == null) {
        break missingId;
      }

      return new FragmentSettingBinding((LinearLayout) rootView, containerLinearChangeAlarm,
          containerLinearChangeFont, containerLinearChangeProfile, containerLinearChangePw,
          containerLinearDeleteAccount, containerLinearLogout, imgvChangeAlarm, imgvChangeFont,
          imgvChangePw, imgvDeleteAccount, imgvLogout, imgvProfileImg, tvAlarm, tvDeleteAccount,
          tvFont, tvLogout, tvName, tvNickname, tvPw);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
