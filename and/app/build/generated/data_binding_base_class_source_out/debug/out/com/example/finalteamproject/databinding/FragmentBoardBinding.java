// Generated by view binder compiler. Do not edit!
package com.example.finalteamproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.finalteamproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBoardBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cvNew;

  @NonNull
  public final EditText edtSearch;

  @NonNull
  public final ImageView imgvBack;

  @NonNull
  public final RecyclerView recvBoard;

  @NonNull
  public final Spinner spnBoard;

  @NonNull
  public final Spinner spnBoard2;

  @NonNull
  public final TextView tvBoardTitle;

  @NonNull
  public final TextView tvTitle;

  private FragmentBoardBinding(@NonNull LinearLayout rootView, @NonNull CardView cvNew,
      @NonNull EditText edtSearch, @NonNull ImageView imgvBack, @NonNull RecyclerView recvBoard,
      @NonNull Spinner spnBoard, @NonNull Spinner spnBoard2, @NonNull TextView tvBoardTitle,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.cvNew = cvNew;
    this.edtSearch = edtSearch;
    this.imgvBack = imgvBack;
    this.recvBoard = recvBoard;
    this.spnBoard = spnBoard;
    this.spnBoard2 = spnBoard2;
    this.tvBoardTitle = tvBoardTitle;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBoardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBoardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_board, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBoardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cv_new;
      CardView cvNew = ViewBindings.findChildViewById(rootView, id);
      if (cvNew == null) {
        break missingId;
      }

      id = R.id.edt_search;
      EditText edtSearch = ViewBindings.findChildViewById(rootView, id);
      if (edtSearch == null) {
        break missingId;
      }

      id = R.id.imgv_back;
      ImageView imgvBack = ViewBindings.findChildViewById(rootView, id);
      if (imgvBack == null) {
        break missingId;
      }

      id = R.id.recv_board;
      RecyclerView recvBoard = ViewBindings.findChildViewById(rootView, id);
      if (recvBoard == null) {
        break missingId;
      }

      id = R.id.spn_board;
      Spinner spnBoard = ViewBindings.findChildViewById(rootView, id);
      if (spnBoard == null) {
        break missingId;
      }

      id = R.id.spn_board2;
      Spinner spnBoard2 = ViewBindings.findChildViewById(rootView, id);
      if (spnBoard2 == null) {
        break missingId;
      }

      id = R.id.tv_boardTitle;
      TextView tvBoardTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvBoardTitle == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new FragmentBoardBinding((LinearLayout) rootView, cvNew, edtSearch, imgvBack,
          recvBoard, spnBoard, spnBoard2, tvBoardTitle, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
