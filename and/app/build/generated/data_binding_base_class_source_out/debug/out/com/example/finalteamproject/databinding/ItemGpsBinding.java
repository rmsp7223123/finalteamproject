// Generated by view binder compiler. Do not edit!
package com.example.finalteamproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.finalteamproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemGpsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout itemSenior;

  @NonNull
  public final TextView seniorKey;

  @NonNull
  public final TextView seniorLike;

  @NonNull
  public final TextView seniorName;

  @NonNull
  public final TextView seniorPhone;

  @NonNull
  public final TextView seniorRoadaddress;

  private ItemGpsBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout itemSenior,
      @NonNull TextView seniorKey, @NonNull TextView seniorLike, @NonNull TextView seniorName,
      @NonNull TextView seniorPhone, @NonNull TextView seniorRoadaddress) {
    this.rootView = rootView;
    this.itemSenior = itemSenior;
    this.seniorKey = seniorKey;
    this.seniorLike = seniorLike;
    this.seniorName = seniorName;
    this.seniorPhone = seniorPhone;
    this.seniorRoadaddress = seniorRoadaddress;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemGpsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemGpsBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_gps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemGpsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout itemSenior = (LinearLayout) rootView;

      id = R.id.senior_key;
      TextView seniorKey = ViewBindings.findChildViewById(rootView, id);
      if (seniorKey == null) {
        break missingId;
      }

      id = R.id.senior_like;
      TextView seniorLike = ViewBindings.findChildViewById(rootView, id);
      if (seniorLike == null) {
        break missingId;
      }

      id = R.id.senior_name;
      TextView seniorName = ViewBindings.findChildViewById(rootView, id);
      if (seniorName == null) {
        break missingId;
      }

      id = R.id.senior_phone;
      TextView seniorPhone = ViewBindings.findChildViewById(rootView, id);
      if (seniorPhone == null) {
        break missingId;
      }

      id = R.id.senior_roadaddress;
      TextView seniorRoadaddress = ViewBindings.findChildViewById(rootView, id);
      if (seniorRoadaddress == null) {
        break missingId;
      }

      return new ItemGpsBinding((LinearLayout) rootView, itemSenior, seniorKey, seniorLike,
          seniorName, seniorPhone, seniorRoadaddress);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
