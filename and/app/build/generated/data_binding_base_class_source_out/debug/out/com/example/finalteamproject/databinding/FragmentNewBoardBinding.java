// Generated by view binder compiler. Do not edit!
package com.example.finalteamproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.finalteamproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNewBoardBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cvNext;

  @NonNull
  public final EditText edtContent;

  @NonNull
  public final EditText edtTitle;

  @NonNull
  public final ImageView imgvBack;

  @NonNull
  public final ImageView imgvDelete;

  @NonNull
  public final ImageView imgvPic;

  @NonNull
  public final LinearLayout lnImage;

  @NonNull
  public final Spinner spnBoard;

  private FragmentNewBoardBinding(@NonNull LinearLayout rootView, @NonNull CardView cvNext,
      @NonNull EditText edtContent, @NonNull EditText edtTitle, @NonNull ImageView imgvBack,
      @NonNull ImageView imgvDelete, @NonNull ImageView imgvPic, @NonNull LinearLayout lnImage,
      @NonNull Spinner spnBoard) {
    this.rootView = rootView;
    this.cvNext = cvNext;
    this.edtContent = edtContent;
    this.edtTitle = edtTitle;
    this.imgvBack = imgvBack;
    this.imgvDelete = imgvDelete;
    this.imgvPic = imgvPic;
    this.lnImage = lnImage;
    this.spnBoard = spnBoard;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNewBoardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNewBoardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_new_board, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNewBoardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cv_next;
      CardView cvNext = ViewBindings.findChildViewById(rootView, id);
      if (cvNext == null) {
        break missingId;
      }

      id = R.id.edt_content;
      EditText edtContent = ViewBindings.findChildViewById(rootView, id);
      if (edtContent == null) {
        break missingId;
      }

      id = R.id.edt_title;
      EditText edtTitle = ViewBindings.findChildViewById(rootView, id);
      if (edtTitle == null) {
        break missingId;
      }

      id = R.id.imgv_back;
      ImageView imgvBack = ViewBindings.findChildViewById(rootView, id);
      if (imgvBack == null) {
        break missingId;
      }

      id = R.id.imgv_delete;
      ImageView imgvDelete = ViewBindings.findChildViewById(rootView, id);
      if (imgvDelete == null) {
        break missingId;
      }

      id = R.id.imgv_pic;
      ImageView imgvPic = ViewBindings.findChildViewById(rootView, id);
      if (imgvPic == null) {
        break missingId;
      }

      id = R.id.ln_image;
      LinearLayout lnImage = ViewBindings.findChildViewById(rootView, id);
      if (lnImage == null) {
        break missingId;
      }

      id = R.id.spn_board;
      Spinner spnBoard = ViewBindings.findChildViewById(rootView, id);
      if (spnBoard == null) {
        break missingId;
      }

      return new FragmentNewBoardBinding((LinearLayout) rootView, cvNext, edtContent, edtTitle,
          imgvBack, imgvDelete, imgvPic, lnImage, spnBoard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
